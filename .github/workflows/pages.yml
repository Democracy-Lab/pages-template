name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc jq

      - name: Build docs/index.html from README (Arial font)
        env:
          REPO_HTML_TITLE: ${{ github.repository }}
        run: |
          mkdir -p docs
          if [ -f README.md ]; then
            pandoc README.md -f markdown -t html -s -o docs/index.html --metadata title="$REPO_HTML_TITLE"
          else
cat > docs/index.html <<'HTML'
<!doctype html><meta charset="utf-8">
<title>Site</title><h1>Site</h1>
<p>No README.md found. Add one and push to regenerate this page.</p>
HTML
          fi
          # Inject Arial font
          sed -i 's|</head>|<style>body{font-family:Arial, Helvetica, sans-serif;} h1,h2,h3,h4,h5,h6{font-family:Arial, Helvetica, sans-serif;}</style></head>|' docs/index.html

      - name: Append suggested citation (written + BibTeX) + repo metadata
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          OWNER: ${{ github.repository_owner }}
        run: |
          set -e

          REPO_NAME="${REPO#*/}"
          REPO_URL="https://github.com/$REPO"
          LAST_UPDATE=$(git log -1 --format=%cI || date -u +%Y-%m-%dT%H:%M:%SZ)
          YEAR=$(date -u -d "$LAST_UPDATE" +%Y 2>/dev/null || date -u +%Y)

          # Get contributor logins
          logins=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
            "https://api.github.com/repos/$REPO/contributors?per_page=100&anon=false" \
            | jq -r '.[] | select((.type // "") != "Bot") | select(.login != "ghost") | .login' | sort -fu)

          # Map to display names
          names=""
          for u in $logins; do
            name=$(curl -s -H "Authorization: Bearer $GH_TOKEN" "https://api.github.com/users/$u" | jq -r '.name // empty')
            [ -z "$name" ] && name="$u"
            if [ "$name" != "Steph Buongiorno" ] && [ "$u" != "stephbuon" ]; then
              names="$names\n$name"
            fi
          done
          names_sorted=$(printf "%b" "$names" | awk 'NF' | sort -fu)

          # Written-out citation
          citation="Steph Buongiorno"
          if [ -n "$names_sorted" ]; then
            citation="$citation; $(echo "$names_sorted" | paste -sd ', ' -)"
          fi
          citation="$citation. $REPO_NAME. $YEAR. Available at: $REPO_URL"

          # BibTeX citation
          bibtex="@misc{$REPO_NAME-$YEAR,
  author = {$citation},
  title = {$REPO_NAME},
  year = {$YEAR},
  howpublished = {\\url{$REPO_URL}},
  note = {Last updated: $LAST_UPDATE}
}"

          # Append both to index.html
cat >> docs/index.html <<HTML

<hr>
<h2>Suggested Citation</h2>
<p>$citation</p>

<h3>BibTeX</h3>
<pre><code>$bibtex</code></pre>

<h3>Repository</h3>
<p><em>$REPO_NAME</em><br>
<a href="$REPO_URL">$REPO_URL</a><br>
<strong>Last updated:</strong> $LAST_UPDATE</p>
HTML

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4


