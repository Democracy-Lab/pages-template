name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc jq

      - name: Build docs/index.html from README
        env:
          REPO_HTML_TITLE: ${{ github.repository }}
        run: |
          mkdir -p docs
          if [ -f README.md ]; then
            pandoc README.md -f markdown -t html -s -o docs/index.html --metadata title="$REPO_HTML_TITLE"
          else
            cat > docs/index.html <<'HTML'
            <!doctype html><meta charset="utf-8">
            <title>Site</title><h1>Site</h1>
            <p>No README.md found. Add one and push to regenerate this page.</p>
            HTML
          fi

      - name: Append citation (Steph first, then contributors)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          OWNER: ${{ github.repository_owner }}
        run: |
          # Get contributor logins (exclude bots/ghost), up to 100
          logins=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
            "https://api.github.com/repos/$REPO/contributors?per_page=100&anon=false" \
            | jq -r '.[] | select((.type // "") != "Bot") | select(.login != "ghost") | .login' | sort -fu)

          # Turn logins into display names; fall back to login if name empty
          names=""
          for u in $logins; do
            name=$(curl -s -H "Authorization: Bearer $GH_TOKEN" "https://api.github.com/users/$u" | jq -r '.name // empty')
            [ -z "$name" ] && name="$u"
            # Skip Steph if her display name/login would duplicate the forced-first author
            if [ "$name" != "Steph Buongiorno" ] && [ "$u" != "stephbuon" ]; then
              names="$names\n$name"
            fi
          done

          # Sort remaining names alphabetically, unique
          names_sorted=$(printf "%b" "$names" | awk 'NF' | sort -fu)

          # Build citation line
          citation="Steph Buongiorno"
          if [ -n "$names_sorted" ]; then
            citation="$citation; $(echo "$names_sorted" | paste -sd ', ' -)"
          fi

          # Add repo link + date
          today=$(date -u +%Y-%m-%d)
          repo_url="https://github.com/$REPO"

          cat >> docs/index.html <<HTML

<hr>
<h2>Citation</h2>
<p>$citation.</p>
<p><strong>Repository:</strong> <a href="$repo_url">$repo_url</a><br>
<strong>Date:</strong> $today</p>
HTML

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4

